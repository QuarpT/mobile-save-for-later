AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Implements save for later for mobile
Parameters:
  Stack:
    Description: Stack name
    Type: String
    Default: mobile
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - CODE
      - PROD
  App:
    Description: Application name
    Type: String
    Default: mobile-save-for-later
  DeployBucket:
    Description: S3 Bucket where riff-raff uploads artifacts on deploy
    Type: String
    Default: mobile-dist
  HostedZoneId:
    Description: Id of HostedZone
    Type: String
  HostedZoneName:
    Description: Name of HostedZone
    Type: String
  CertArn:
    Description: ACM Certificate ARN
    Type: String

Resources:
  SaveForLaterRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: logs
          PolicyDocument:
            Statement:
              Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: "*"
        - PolicyName: ssm-config
          PolicyDocument:
            Statement:
              Action:
                - ssm:GetParametersByPath
              Effect: Allow
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${App}/${Stage}/${Stack}

  SaveForLaterApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      DefinitionBody:
        swagger: "2.0"
        info:
          version: "1.0.0"
          title: !Ref App
        paths:
          "/syncedPrefs/me/savedArticles":
            post:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SaveForLaterLambda.Arn}/invocations
              consumes:
              - application/json
              produces:
              - application/json
              responses:
                "200":
                  "description": "200 response"


  ApiDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref CertArn
      DomainName: !Sub ${App}.${HostedZoneName}

  ApiRoute53:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Ref ApiDomainName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt
              - ApiDomainName
              - DistributionDomainName

  ApiMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref ApiDomainName
      RestApiId: !Ref SaveForLaterApi
      Stage: !Ref Stage

  SaveForLaterLambda:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.gu.sfl.lambda.SaveForLaterLambda.handleRequest
      Runtime: java8
      CodeUri:
        Bucket: !Ref DeployBucket
        Key: !Sub ${Stack}/${Stage}/${App}/${App}.jar
      FunctionName: !Sub ${App}-updateSyncedPrefs-${Stage}
      Environment:
        Variables:
          Stack: !Ref Stack
          Stage: !Ref Stage
          App: !Ref App
      MemorySize: 384
      Timeout: 60
      Events:
        PostApi:
          Type: Api
          Properties:
           Path: "/syncedPrefs/me/savedArticles"
           Method: POST
           RestApiId: !Ref SaveForLaterApi








